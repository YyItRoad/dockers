####### Global Parameters #########

log_level=2
log_stderror=yes
log_facility=LOG_LOCAL0

udp_workers=24
#tcp_children=32
check_via=no
rev_dns=off

user_agent_header="User-Agent: VOS 2.2.10"
server_header="Server: VOS 2.2.10"

/* uncomment the following lines to enable debugging */
#debug_mode=yes

/* uncomment the next line to enable the auto temporary blacklisting of 
   not available destinations (default disabled) */
#disable_dns_blacklist=no

/* uncomment the next line to enable IPv6 lookup after IPv4 dns 
   lookup failures (default disabled) */
#dns_try_ipv6=yes

/* comment the next line to enable the auto discovery of local aliases
   based on reverse DNS on IPs */
#auto_aliases=no

#advertised_address=udp:218.104.49.217:4260
listen=udp:172.17.0.8:5060

####### Modules Section ########

#set module path
mpath="/usr/lib/x86_64-linux-gnu/opensips/modules/"
#mpath="/usr/local/lib64/opensips/modules"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 30)
modparam("tm", "fr_inv_timeout", 60)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### Record Route Module
loadmodule "rr.so"
/* do not append from tag to the RR (no need for this script) */
#modparam("rr", "append_fromtag", 0)

#### MAX ForWarD module
loadmodule "maxfwd.so"

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### FIFO Management Interface
loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")
modparam("mi_fifo", "fifo_mode", 0666)

#### MYSQL module
# loadmodule "db_mysql.so"

#### AVPOPS module
loadmodule "avpops.so"

loadmodule "proto_udp.so"
#loadmodule "proto_tcp.so"
#modparam("proto_tcp", "tcp_send_timeout", 2000) 
#modparam("proto_tcp", "tcp_max_msg_chunks", 8)

#### B2B_Entity ####
loadmodule "b2b_entities.so"
# modparam("b2b_entities", "script_req_route", "b2b_request")
modparam("b2b_entities", "script_reply_route", "b2b_reply")
modparam("b2b_entities", "b2b_key_prefix", "b2cid")
modparam("b2b_entities", "db_mode", 0)
#modparam("b2b_entities", "replication_mode", 0)

#### B2B_Entity ####
loadmodule "b2b_logic.so"
modparam("b2b_logic", "init_callid_hdr", "Init-CallID")
modparam("b2b_logic", "b2bl_from_spec_param", "$var(b2bl_from)")
modparam("b2b_logic", "script_scenario", "/etc/opensips/scenario_callcenter.xml")

loadmodule "uac.so"
loadmodule "uac_auth.so"

#### REST_client module
loadmodule "tracer.so"
loadmodule "rest_client.so"
modparam("rest_client", "curl_timeout", 5)
modparam("rest_client", "connection_timeout", 3)
modparam("rest_client", "max_async_transfers", 5000)
####### Routing Logic ########

# main request routing logic
route{
    xlog("logic => $fd:$rm $fU|$tU\n");
    t_check_trans();
    $avp(number) = 0;
    $avp(media) = 0;
    $avp(caller) = $fU;
    $avp(called) = $tU;
    if (is_method("INVITE")) {
        if($(avp(called){s.substr,0,4}) != "9988") {
            $avp(type) = 2; 
            xlog("invite => http://39.100.181.108:12882/api/fs/calling?caller=$fU&called=$tU&number=0&state=invite\n");
            async(rest_get("http://39.100.181.108:12882/api/fs/calling?caller=$fU&called=$tU&number=0&state=invite",$var(body),$var(rcode),$var(retcode)),invite);
        } else {
            $avp(type) = 3; 
            xlog("invite => http://218.104.49.221:8801/api/fs/calling?caller=$fU&called=$tU&number=0&state=invite\n");
            async(rest_get("http://218.104.49.221:8801/api/fs/calling?caller=$fU&called=$tU&number=0&state=invite",$var(body),$var(rcode),$var(retcode)),invite);
        }
    }
}

route[invite] {
    $var(rc) = $rc;
    if($var(body) == "0" || $var(rc) < 0) {
        xlog("rc => $var(rc) body => $var(body) resume => $avp(media) >> resume:$rc >> caller:$avp(caller) >> called:$avp(called)  number:$avp(number)\n");
        send_reply(480,"Api Request Error");
    } else {
        $var(i_url) = "sip:"+$(var(body){s.select,0,|})+"@" + $(var(body){s.select,3,|});
        xlog("invite url => $var(i_url) $var(body) \n");
        $avp(number) = $(var(body){s.select,0,|});
        $avp(number_type) = $(var(body){s.select,1,|});
        $var(b2bl_from) = "sip:" + $(var(body){s.select,4,|}) + "@" + $fd;
        b2b_init_request("callcenter", "$var(i_url)");
    }
}

route[b2b_reply] {
    # xlog("reply => rm:$rm+rs:$rs \n");
    if ($rm == "INVITE") {
        if($rs == 183 || $rs == 180 ){
            if (has_body_part("application/sdp") && $avp(media) != 1) {
                $avp(media) = 1;
                $var(param_media) = "caller=" + $avp(caller) + "&called=" + $avp(called) + "&state=media&number=" + $avp(number) + "&type=" + $avp(number_type);
                $var(url) = "http://39.100.181.108:12882/api/fs/calling?" + $var(param_media);
                if ($avp(type) == 3) {
                    $var(url) = "http://218.104.49.221:8801/api/fs/calling" + $var(param_media);
                }
                xlog("media => $var(url) \n");
                async(rest_get($var(url),$var(body),$var(rcode),$var(retcode)),resume);
            }
        }

        if ($rs == 200 && $avp(caller) != null) {
            $var(param_answer) = "caller=" + $avp(caller) + "&called=" + $avp(called) + "&state=answer&number=" + $avp(number) + "&type=" + $avp(number_type);
            $var(url) = "http://39.100.181.108:12882/api/fs/calling?" + $var(param_answer);
            if ($avp(type) == 3) {
                $var(url) = "http://218.104.49.221:8801/api/fs/calling" + $var(param_answer);
            }
            xlog("answer => $var(url) \n");
            async(rest_get($var(url),$var(body),$var(rcode),$var(retcode)),resume);
        }
        # xlog("--->$avp(media) $avp(caller) rs:$rs\n");
        if ($rs > 200 && $avp(media) != 1 && $avp(caller) != null) {
            $var(param_hangup) = "caller=" + $avp(caller) + "&called=" + $avp(called) + "&state=hangup&number=" + $avp(number) + "&type=" + $avp(number_type);
            $var(url) = "http://39.100.181.108:12882/api/fs/calling?" + $var(param_hangup);
            if ($avp(type) == 3) {
                $var(url) = "http://218.104.49.221:8801/api/fs/calling" + $var(param_hangup);
            }
            xlog("hangup => $var(url) \n");
            async(rest_get($var(url),$var(body),$var(rcode),$var(retcode)),resume);
        }
    }
}

route[resume] {
    $var(rc) = $rc;
    # xlog("resume => $avp(media) >> resume:$rc >> caller:$avp(caller) >> called:$avp(called)  number:$avp(number)\n");
}